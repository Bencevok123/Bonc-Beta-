Kopernicus
{
    Body    
    {
        name = Pinc //change to the name of your planet
        flightGlobalsIndex = 1234  //change to any number, not too big.  Avoid numbers used by other planet packs
        Template
        {
            name = Laythe  //Don't change this!  Duna and Eve have hard coded colors, so they make bad templates.  Use Laythe even if your planet doesn't have oceans.
        }
        Properties
        {
            description = Perverz vagy? ezért nézzed?
            radius = 40000 //How big is the planet?  Laythe is 500000, keeping this number makes clouds easier to use
            geeASL = 0.4  //Gravity at sea level.  Kerbin is 1, of course
			rotationPeriod = 12054
			rotates = true
			tidallyLocked = false
			initialRotation = 0
			isHomeWorld = false
                        timewarpAltitudeLimits = 0 0 0 150000 200000 300000 400000 800000  //altitudes that time warp can be used at, in meters.  Time warps are x1, x5, x10, x50, x100, x1000, x10000, and x100000
                        
                        ScienceValues  //Higher values mean more science.  Increase these for planets that are hard to reach or to land on, return from.  
                        {
                                landedDataValue = 10  //Duna = 8, Laythe = 14
                                flyingLowDataValue = 9  //Duna = 5, Laythe = 11
                                flyingHighDataValue = 8.5  //Duna = 5, Laythe = 10
                                inSpaceLowDataValue = 8  //Duna = 7, Laythe = 9
                                inSpaceHighDataValue = 7.5  //Duna = 5, Laythe = 8
                                recoveryValue = 8
                                flyingAltitudeThreshold = 20000  //limit between "flying at TutPlanetAtmosphere" and "TutPlanetAtmosphere's upper atmosphere"
                                spaceAltitudeThreshold =  200000  //limit between "space near TutPlanetAtmosphere" and "space high above TutPlanetAtmosphere"
                        }
        }
        Orbit
        {
            referenceBody = Bonc  //what body does it orbit?  DO NOT write Kerbol, the sun is called Sun in game.  All other bodies use their names.
            color = 0.8,0.1,0.8,1  //RGB color of the orbit line
            inclination = 10.6  //inclination in degrees
            eccentricity = 0.03  //eccentricity of orbit, don't set this higher than 0.1 especially for large planets
            semiMajorAxis = 12000000 //how far the planet is from the sun.  This number is Kerbin's
            longitudeOfAscendingNode = 60  //change to whatever you want
            argumentOfPeriapsis = 25  //change to whatever you want
            meanAnomalyAtEpoch = 0  //Determines where the planet starts at day 0. Probably don't change
            epoch = 0  //Determines where the planet starts at day 0. Probably don't change
        }
        ScaledVersion
        {
            Material
            {    
                texture = Bonc/Textures/Pinc_map  //change to your file path.  Don't include "GameData/" or ".png"
                normals = Bonc/Textures/Pinc_normal  //change to your file path.  Don't include "GameData/" or ".png"
		PlanetTutLargeMoon
{
	AdditionalData
	{
		Stock = False
		AddAtmoFx = False
		AddOceanFx = False
		OceanLoadTextures = False
		UnlitOcean = False
		ModScaledAtmoShader = False
		AddRings = False
		AddParticles = False
		DisableOrbitRenderer = False
	}
	PQS
	{
		PQSMod_HeightColorMap
		{
			modEnabled = False
		}
		PQSCity
		{
			modEnabled = False
		}
		PQSMod_VertexHeightMap
		{
			heightMap = GameData/Bonc/Textures/Pinc_height.png  //Replace this with your file path
			heightMapDeformity = 2500  //how tall should the highest mountains be?
			heightMapOffset = 0  //only necessary if you're using oceans or if you get areas below 0 elevation
			scaleDeformityByRadius = False
		}
		PQSMod_VertexColorMap
		{
			modEnabled = true
			vertexColorMap = GameData/Bonc/Textures/Pinc_map.png  //Replace this  with your file path
		}
		PQSMod_VertexSimplexHeight
		{
			seed = 95374  //change this to any random number
			deformity = 300  //how bumpy do you want the ground to be
			octaves = 8 //how small do you want the bumps to be
			persistence = 0.5  //don't know what these do, you can try changing them and see what happens
			frequency = 12
		}
		PQSMod_VertexSimplexHeightAbsolute
		{
			seed = 637926  //change this to any random number
			deformity = 100  //how bumpy do you want the ground to be
			octaves = 3  //how small do you want the bumps to be
			persistence = 0.5  //don't know what these do, you can try changing them and see what happens
			frequency = 0.8
		}
		PQSMod_VertexSimplexHeightMap
		{
			modEnabled = False
		}
		PQSMod_VertexHeightNoiseVertHeight
		{
			modEnabled = False
		}
	}
}		